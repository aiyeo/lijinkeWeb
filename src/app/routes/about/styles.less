@import "~styles/vars.less";
@import "~styles/mixin.less";
@strike-height : 100px;        //撞击物体
.about-section{
    @header-img-animate-time :8s;
    .strike-section{
        width:100%;
        height:@strike-height;
        position: fixed;
        left:0;
        bottom:-@strike-height;
        background: @primary-color;
        box-shadow: 1px 2px 10px rgba(0,0,0,.2);
        z-index: 100;
        animation: strikeAnimate .7s cubic-bezier(.49,-0.16,.32,1);
        animation-delay:  @header-img-animate-time * 0.48 ;
    }
    .header-img-content{
        @margin:530px;       //头像距离顶部的差值  值越大  距离顶部越小
        @header-img-width:100px;
        @header-img-height:@header-img-width;
        display: flex;
        justify-content: center;
        .header-img{
            position: relative;
            transform-origin: 50% -20%;
            height:calc(~"100vh - @{margin}");
            animation: headerBoxAnimate   @header-img-animate-time cubic-bezier(.49,-0.16,.32,1.53)  forwards;
            .line{
                width:2px;
                height:calc(~"100vh - @{margin} + 200px");
                background: #fff;
                box-shadow: 1px 2px 3px rgba(0,0,0,.3);
                position: absolute;
                top: -@header-img-height;
                left:50%;
                z-index:44;
                animation: headerLineAnimate 3s cubic-bezier(.49,-0.16,.32,1.53) ;
                animation-delay:4s;
            }
            .img{
                width:@header-img-width;
                height:@header-img-height;
                overflow: hidden;
                border:2px solid #fff;
                position: relative;
                z-index: 99;
                .transition();
                transform: rotate(90deg);
                box-shadow: 1px 1px 20px rgba(0,0,0,.3);
                border-radius: 50%;
                margin-top:calc(~"100vh - @{margin}");
                overflow: hidden;
                &:hover,&:active{
                    .show-title{
                        transform: scale(1)
                    }
                }
                .show-title{
                    position: absolute;
                    width:100%;
                    height:100%;
                    top:0;
                    left:0;
                    line-height: 100px;
                    text-align: center;
                    color:#fff;
                    font-size:20px;
                    transform: scale(0);
                    .transition()
                }
                &:hover{
                    border:2px solid @primary-color;
                }
                img{
                    max-width:100%;
                    height:100%;
                }
            }
        }
    }
    .header-img-modal{
        text-align: center;
        padding: 20px;
        img{
            text-align: center;
            max-width: 90%;
            // transform: rotate(90deg);
        }
    }
    .about-content{
        margin-top:160px;
        ul.about-interest{
            display: flex;
            align-items: center;
            li.item{
                padding: 3px 10px;
                color:#fff;
                background: @primary-color;
            }
            @media screen and (max-width:768px){
                flex-direction: column-reverse;
                li.item{
                    width:100%;
                    flex:1;
                }
            }
        }
    }
}
//白线掉落动画
@keyframes headerLineAnimate{
    to{
        opacity: 0;
        transform: rotate(360deg) translate3d(calc(~"-100vw"),calc(~"-100vh"),0)
    }
}
//撞击头像动画
@keyframes strikeAnimate{
    0%{
         transform: translate3d(0,0,0)
    }
    70%{
        box-shadow: 1px 2px 20px rgba(255,255,255,.3);
        bottom: @strike-height * 0.6;
        // transform: translate(0, (-@strike-height +30px),0)
    }
    to{
        bottom:0;
        transform: translate3d(0,0,0)
    }
}
//头像抖落动画
@keyframes headerBoxAnimate{
    0%{
        transform: rotate(-45deg) 
    }
    10%{
        transform: rotate(45deg) 
    }
    15%{
        transform: rotate(-35deg)
    }
    20%{
        transform: rotate(35deg) 
    }
    25%{
        transform: rotate(-25deg) 
    }
    30%{
        transform: rotate(25deg) 
    }
    35%{
        transform: rotate(-10deg) 
    }
    40%{
        transform: rotate(10deg)
    }
    45%{
        transform: rotate(0deg)
    }
    50%{
        transform: scale(1.1) translate3d(0,calc(~"100vh - @{header-height} - @{strike-height} - 100px"),0)
    }
    80%{
        transform: scale(0) translate3d(0,calc(~"-100vh"),0)
    }
    to{
        transform: scale(1.0) translate3d(0,0,0)
    }
}